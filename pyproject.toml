[project]
name = "openvino-genai"
version = "2025.4.0.0"
description = "Library of the most popular Generative AI model pipelines, optimized execution methods, and samples"
requires-python = ">=3.9"
readme = { file = "src/README.md", content-type="text/markdown" }
license = { "file" = "LICENSE" }
authors = [
    { name = "OpenVINO Developers", email = "openvino@intel.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Programming Language :: C++",
    "Programming Language :: C",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = [
    "openvino_tokenizers~=2025.4.0.0.dev"
]
[project.optional-dependencies]
testing = ["pytest>=6.0"]

[tool.py-build-cmake.module]
directory = "src/python"

[tool.py-build-cmake.sdist]
include = ["CMakeLists.txt", "LICENSE", "third-party-programs.txt", "SECURITY.md", "cmake", "src", "thirdparty"]

[tool.py-build-cmake.cmake]
minimum_version = "3.23"
build_type = "Release"
config = ["Release"]
find_python3 = true
build_args = ["--parallel", "--target", "py_openvino_genai_stub"]
install_args = ["--strip"]
install_components = ["wheel_genai"]
options = {"ENABLE_PYTHON" = "ON", "BUILD_TOKENIZERS" = "OFF", "ENABLE_SAMPLES" = "OFF", "ENABLE_TESTS" = "OFF", "ENABLE_TOOLS" = "OFF", "CMAKE_SKIP_INSTALL_RPATH" = "OFF"}

[build-system]
requires = [
    "py-build-cmake==0.5.0",
    "openvino~=2025.4.0.0.dev",
    "pybind11-stubgen==2.5.5",
    "cmake~=3.23.0; platform_system != 'Darwin' or platform_machine == 'x86_64'",
    "cmake~=3.24.0; platform_system == 'Darwin' and platform_machine == 'arm64'",
]
build-backend = "py_build_cmake.build"

[tool.pytest.ini_options]
markers = [
    "precommit: (deselect with '-m \"precommit\"')",
]
